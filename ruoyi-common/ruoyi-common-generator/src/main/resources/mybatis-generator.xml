<?xml version="1.0" encoding="UTF-8"?>
<!-- MyBatis-Generator 相关配置 -->
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!-- 所有的配置均在 generatorConfiguration 标签下 -->
<generatorConfiguration>

    <!-- 引入外部配置文件   -->
<!--    <properties resource="mybatis-generator.properties"/>-->
    <!--  加载需要的额外的依赖包 -->
    <!--  <classPathEntry location="/Users/deecyn/Files/db2java.zip"/>-->

    <!-- 配置 context 上下文  -->
    <context id="MySqlContext" targetRuntime="MyBatis3" defaultModelType="flat">
        <property name="generateExampleClass" value="true" />
        <property name="autoDelimitKeywords" value="false"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <commentGenerator>
        <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--  配置数据库连接  -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;maxReconnects=10&amp;connectTimeout=3000&amp;socketTimeout=3000"
                        userId="root"
                        password="66666666">

            <!--  若为 8.0 版本以上的 mysql-connector-java 驱动，需要设置 nullCatalogMeansCurrent = true -->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <!--  配置类型转换规则  -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
            <property name="useJSR310Types" value="true"/>
        </javaTypeResolver>

        <!--生成Model类存放位置-->
        <javaModelGenerator targetPackage="com.ruoyi.common.generator.entity" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- SQL Map 的 xml 文件生成器 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <!-- 同 javaModelGenerator 元素中的配置  -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!--  关于 Mapper 接口的生成 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.ruoyi.common.generator.mapper"
                             targetProject="src/main/java">
            <!-- 同 javaModelGenerator 元素中的配置  -->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 配置需要生成代码的数据库表 -->
        <table tableName="user_ban" domainObjectName="UserBan"
               enableCountByExample="true" enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true"
               selectByExampleQueryId="false">

            <!-- 指定是否只生成 domain 类，默认为 false；
            如果设置为 true，则只生成 domain 类，如果还配置了sqlMapGenerator，那么
            在 mapper.xml 文件中，只生成 resultMap 元素 -->
            <property name="modelOnly" value="false"/>

            <!-- 默认为 false；如果设置为 true，生成的 model 类会直接使用 column 本身的名字，而不会再使用驼峰命名方法，
            比如 CREATE_DATE，生成的属性名字就是 CREATE_DATE,而不会是 createDate -->
            <property name="useActualColumnNames" value="false"/>

            <!--  生成主键的方法，如果设置了该元素，MBG 会在生成的 <insert> 元素中生成一条正确的 <selectKey> 元素 -->
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>

            <!-- 用来修改表中某个列的属性，MBG 会根据修改后的配置来生成 domain 的属性；
                column：要重新设置的列名；一个 table 元素中可以定义多个 columnOverride 元素哈 -->
            <columnOverride column="show_status">
                <!-- 使用 property 属性来指定列要生成的属性名称 -->
                <property name="property" value="showStatus"/>

                <!-- javaType 用于指定生成的 domain 的属性类型，使用类型的全限定名-->
                <property name="javaType" value="java.lang.Integer"/>

                <!-- jdbcType用于指定该列的JDBC类型
                <property name="jdbcType" value=""/>
                 -->
            </columnOverride>

        </table>
    </context>
</generatorConfiguration>
